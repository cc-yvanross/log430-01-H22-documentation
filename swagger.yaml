openapi: 3.0.0
info:
  title: LOG430
  version: 1.0.0
  description: |-
    Documentation de base pour les micro services du laboratoire de LOG430. 
    École de Technologie Supérieure - Hiver 2022. 

    En cas de question : **@Coordonnateur** sur discord
servers:
  - url: test.api
paths:
  '/route/{origin}/{destination}':
    get:
      tags:
        - IRouteCalculator
      parameters:
        - example: '45.5944645,-73.4704491'
          name: origin
          description: 'Coordinates of the origin point (Format : LAT,LONG)'
          schema:
            type: string
          in: path
          required: true
        - example: '45.5944645,-73.4704491'
          name: destination
          description: 'Coordinates of the destination point (Format : LAT,LONG)'
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteCalculatorResponse'
          description: Information about the time required to drive from origin to destination
      summary: Get travel time between to points
      description: Return the estimated route time between two points for a given provider.
      operationId: get-travel-time
  /api/info:
    get:
      tags:
        - IService
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatusResponse'
      summary: Get API info
      description: This endpoint returns usefull information on the API
      operationId: service-status
    parameters: []
  /api/latency:
    put:
      summary: Set API latency
      tags:
        - IService
      responses:
        '200':
          description: OK
      operationId: service-latency
      description: Update the micro-service latency for testing purpose.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  latency: 0
              properties:
                latency:
                  type: number
                  description: The latency to add (in seconds) for test purposes. To reset latency set latency to 0
              required:
                - latency
            examples:
              example:
                value:
                  latency: 5
        description: ''
components:
  schemas:
    RouteCalculatorResponse:
      type: object
      properties:
        date:
          format: date-time
          type: string
        origin:
          format: 'lat,long'
          type: string
        destination:
          format: 'lat,long'
          type: string
        duration:
          description: Duration in minutes
          type: number
        distance:
          description: Distance in meters
          type: number
    ApiStatusResponse:
      title: ApiStatusResponse
      type: object
      properties:
        serviceName:
          type: string
          example: GoogleMapExternalService
          description: The name of the micro service
        teamNumber:
          type: number
          example: 3
          description: Number of the team that developed the service
        currentLatency:
          type: string
          example: '0'
          description: Current service latency
      description: Api info response which allows to check that the service is still active
tags:
  - name: IRouteCalculator
    description: Service that allow comparison of routes
  - name: IService
    description: Basic endpoints that all micro services should implements
